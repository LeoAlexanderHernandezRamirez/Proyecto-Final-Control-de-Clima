

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 24 21:18:28 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  06E6                     __pidataBANK0:
   210                           
   211                           ;initializer for main@F1273
   212  06E6  3436               	retlw	54
   213  06E7  3441               	retlw	65
   214  06E8  3437               	retlw	55
   215  06E9  3432               	retlw	50
   216  06EA  3434               	retlw	52
   217  06EB  3433               	retlw	51
   218  06EC  3431               	retlw	49
   219  06ED  3430               	retlw	48
   220  06EE  3420               	retlw	32
   221  06EF  3400               	retlw	0
   222  0019                     _TXREG	set	25
   223  001F                     _ADCON0bits	set	31
   224  001E                     _ADRESH	set	30
   225  0007                     _PORTC	set	7
   226  000B                     _INTCON	set	11
   227  0008                     _PORTD	set	8
   228  0006                     _PORTB	set	6
   229  0005                     _PORTA	set	5
   230  001F                     _ADCON0	set	31
   231  00C4                     _CREN	set	196
   232  00C7                     _SPEN	set	199
   233  0098                     _TXSTAbits	set	152
   234  009E                     _ADRESL	set	158
   235  0099                     _SPBRG	set	153
   236  0087                     _TRISC	set	135
   237  008C                     _PIE1	set	140
   238  0088                     _TRISD	set	136
   239  0086                     _TRISB	set	134
   240  0085                     _TRISA	set	133
   241  009F                     _ADCON1	set	159
   242  008F                     _OSCCON	set	143
   243  04C2                     _BRGH	set	1218
   244  04C4                     _SYNC	set	1220
   245  04C5                     _TXEN	set	1221
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           	psect	cinit
   250  07EA                     start_initialization:	
   251                           ; #config settings
   252                           
   253  07EA                     __initialization:
   254                           
   255                           ; Initialize objects allocated to BANK0
   256  07EA  1383               	bcf	3,7	;select IRP bank0
   257  07EB  306A               	movlw	low (__pdataBANK0+10)
   258  07EC  00FD               	movwf	btemp+-1
   259  07ED  3006               	movlw	high __pidataBANK0
   260  07EE  00FE               	movwf	btemp
   261  07EF  30E6               	movlw	low __pidataBANK0
   262  07F0  00FF               	movwf	btemp+1
   263  07F1  3060               	movlw	low __pdataBANK0
   264  07F2  0084               	movwf	4
   265  07F3  120A  118A  26F4  120A  118A  	fcall	init_ram0
   266                           
   267                           ; Clear objects allocated to COMMON
   268  07F8  01F8               	clrf	__pbssCOMMON& (0+127)
   269  07F9  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   270  07FA  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   271  07FB  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   272  07FC                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  07FC                     __end_of__initialization:
   276  07FC  0183               	clrf	3
   277  07FD  120A  118A  2F1A   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMMON
   280  0078                     __pbssCOMMON:
   281  0078                     _RESULTLO:
   282  0078                     	ds	2
   283  007A                     _RESULTHI:
   284  007A                     	ds	2
   285                           
   286                           	psect	dataBANK0
   287  0060                     __pdataBANK0:
   288  0060                     main@F1273:
   289  0060                     	ds	10
   290                           
   291                           	psect	inittext
   292  06F0                     init_fetch0:	
   293                           ;	Called with low address in FSR and high address in W
   294                           
   295  06F0  087E               	movf	btemp,w
   296  06F1  008A               	movwf	10
   297  06F2  087F               	movf	btemp+1,w
   298  06F3  0082               	movwf	2
   299  06F4                     init_ram0:	
   300                           ;Called with:
   301                           ;	high address of idata address in btemp 
   302                           ;	low address of idata address in btemp+1 
   303                           ;	low address of data in FSR
   304                           ;	high address + 1 of data in btemp-1
   305                           
   306  06F4  120A  118A  26F0  120A  118A  	fcall	init_fetch0
   307  06F9  0080               	movwf	0
   308  06FA  0A84               	incf	4,f
   309  06FB  0804               	movf	4,w
   310  06FC  067D               	xorwf	btemp+-1,w
   311  06FD  1903               	btfsc	3,2
   312  06FE  3400               	retlw	0
   313  06FF  0AFF               	incf	btemp+1,f
   314  0700  1903               	btfsc	3,2
   315  0701  0AFE               	incf	btemp,f
   316  0702  2EF4               	goto	init_ram0
   317                           
   318                           	psect	cstackBANK1
   319  00A0                     __pcstackBANK1:
   320  00A0                     main@LO:
   321                           
   322                           ; 50 bytes @ 0x0
   323  00A0                     	ds	50
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:
   327  0070                     ?_delay:
   328  0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     delay@time:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 2 bytes @ 0x0
   336  0070                     	ds	2
   337  0072                     ??_delay:
   338  0072                     delay@i:	
   339                           ; 1 bytes @ 0x2
   340                           
   341                           
   342                           ; 2 bytes @ 0x2
   343  0072                     	ds	2
   344  0074                     ??_main:
   345                           
   346                           ; 1 bytes @ 0x4
   347  0074                     	ds	4
   348                           
   349                           	psect	cstackBANK0
   350  0020                     __pcstackBANK0:
   351  0020                     main@HI:
   352                           
   353                           ; 50 bytes @ 0x0
   354  0020                     	ds	50
   355  0052                     main@g:
   356                           
   357                           ; 10 bytes @ 0x32
   358  0052                     	ds	10
   359  005C                     main@o:
   360                           
   361                           ; 2 bytes @ 0x3C
   362  005C                     	ds	2
   363  005E                     main@i:
   364                           
   365                           ; 2 bytes @ 0x3E
   366  005E                     	ds	2
   367                           
   368                           	psect	maintext
   369  071A                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 40 in file "MICROVIDEFINITIVO.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  o               2   60[BANK0 ] int 
   380 ;;  LO             50    0[BANK1 ] unsigned char [50]
   381 ;;  HI             50    0[BANK0 ] unsigned char [50]
   382 ;;  g              10   50[BANK0 ] unsigned char [10]
   383 ;;  i               2   62[BANK0 ] int 
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : B00/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0      64      50       0       0
   395 ;;      Temps:          4       0       0       0       0
   396 ;;      Totals:         4      64      50       0       0
   397 ;;Total ram usage:      118 bytes
   398 ;; Hardware stack levels required when called:    1
   399 ;; This function calls:
   400 ;;		_delay
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _main
   408  071A                     _main:
   409  071A                     l764:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   412                           
   413                           
   414                           ;MICROVIDEFINITIVO.c: 45:     OSCCON= 0b01110100;
   415  071A  3074               	movlw	116
   416  071B  1683               	bsf	3,5	;RP0=1, select bank1
   417  071C  1303               	bcf	3,6	;RP1=0, select bank1
   418  071D  008F               	movwf	15	;volatile
   419                           
   420                           ;MICROVIDEFINITIVO.c: 48:     ANSEL = 0b00000001;
   421  071E  3001               	movlw	1
   422  071F  1683               	bsf	3,5	;RP0=1, select bank3
   423  0720  1703               	bsf	3,6	;RP1=1, select bank3
   424  0721  0088               	movwf	8	;volatile
   425  0722                     l766:
   426                           
   427                           ;MICROVIDEFINITIVO.c: 49:     ANSELH= 0x00;
   428  0722  0189               	clrf	9	;volatile
   429  0723                     l768:
   430                           
   431                           ;MICROVIDEFINITIVO.c: 52:     ADCON1 = 0b00000000;
   432  0723  1683               	bsf	3,5	;RP0=1, select bank1
   433  0724  1303               	bcf	3,6	;RP1=0, select bank1
   434  0725  019F               	clrf	31	;volatile
   435                           
   436                           ;MICROVIDEFINITIVO.c: 53:     ADCON0 = 0b00000001;
   437  0726  3001               	movlw	1
   438  0727  1283               	bcf	3,5	;RP0=0, select bank0
   439  0728  1303               	bcf	3,6	;RP1=0, select bank0
   440  0729  009F               	movwf	31	;volatile
   441  072A                     l770:
   442                           
   443                           ;MICROVIDEFINITIVO.c: 57:     PORTA = 0x00;
   444  072A  0185               	clrf	5	;volatile
   445  072B                     l772:
   446                           
   447                           ;MICROVIDEFINITIVO.c: 58:     TRISA = 0xFF;
   448  072B  30FF               	movlw	255
   449  072C  1683               	bsf	3,5	;RP0=1, select bank1
   450  072D  1303               	bcf	3,6	;RP1=0, select bank1
   451  072E  0085               	movwf	5	;volatile
   452                           
   453                           ;MICROVIDEFINITIVO.c: 61:     PORTB = 0x00;
   454  072F  1283               	bcf	3,5	;RP0=0, select bank0
   455  0730  1303               	bcf	3,6	;RP1=0, select bank0
   456  0731  0186               	clrf	6	;volatile
   457                           
   458                           ;MICROVIDEFINITIVO.c: 62:     TRISB = 0x00;
   459  0732  1683               	bsf	3,5	;RP0=1, select bank1
   460  0733  1303               	bcf	3,6	;RP1=0, select bank1
   461  0734  0186               	clrf	6	;volatile
   462  0735                     l774:
   463                           
   464                           ;MICROVIDEFINITIVO.c: 63:     TRISD= 0b11000000;
   465  0735  30C0               	movlw	192
   466  0736  0088               	movwf	8	;volatile
   467  0737                     l776:
   468                           
   469                           ;MICROVIDEFINITIVO.c: 64:     PORTD=0x00;
   470  0737  1283               	bcf	3,5	;RP0=0, select bank0
   471  0738  1303               	bcf	3,6	;RP1=0, select bank0
   472  0739  0188               	clrf	8	;volatile
   473                           
   474                           ;MICROVIDEFINITIVO.c: 69:     INTCON = 0b11000000;
   475  073A  30C0               	movlw	192
   476  073B  008B               	movwf	11	;volatile
   477  073C                     l778:
   478                           
   479                           ;MICROVIDEFINITIVO.c: 70:     PIE1 = 0b00000000;
   480  073C  1683               	bsf	3,5	;RP0=1, select bank1
   481  073D  1303               	bcf	3,6	;RP1=0, select bank1
   482  073E  018C               	clrf	12	;volatile
   483  073F                     l780:
   484                           
   485                           ;MICROVIDEFINITIVO.c: 74:     PORTC = 0x00;
   486  073F  1283               	bcf	3,5	;RP0=0, select bank0
   487  0740  1303               	bcf	3,6	;RP1=0, select bank0
   488  0741  0187               	clrf	7	;volatile
   489                           
   490                           ;MICROVIDEFINITIVO.c: 75:     TRISC = 0b10000000;
   491  0742  3080               	movlw	128
   492  0743  1683               	bsf	3,5	;RP0=1, select bank1
   493  0744  1303               	bcf	3,6	;RP1=0, select bank1
   494  0745  0087               	movwf	7	;volatile
   495  0746                     l782:
   496                           
   497                           ;MICROVIDEFINITIVO.c: 78:     TXEN = 1;
   498  0746  1698               	bsf	24,5	;volatile
   499  0747                     l784:
   500                           
   501                           ;MICROVIDEFINITIVO.c: 79:     SYNC = 0;
   502  0747  1218               	bcf	24,4	;volatile
   503  0748                     l786:
   504                           
   505                           ;MICROVIDEFINITIVO.c: 80:     SPEN =1;
   506  0748  1283               	bcf	3,5	;RP0=0, select bank0
   507  0749  1303               	bcf	3,6	;RP1=0, select bank0
   508  074A  1798               	bsf	24,7	;volatile
   509  074B                     l788:
   510                           
   511                           ;MICROVIDEFINITIVO.c: 81:     BRGH=1;
   512  074B  1683               	bsf	3,5	;RP0=1, select bank1
   513  074C  1303               	bcf	3,6	;RP1=0, select bank1
   514  074D  1518               	bsf	24,2	;volatile
   515  074E                     l790:
   516                           
   517                           ;MICROVIDEFINITIVO.c: 83:     CREN=1;
   518  074E  1283               	bcf	3,5	;RP0=0, select bank0
   519  074F  1303               	bcf	3,6	;RP1=0, select bank0
   520  0750  1618               	bsf	24,4	;volatile
   521                           
   522                           ;MICROVIDEFINITIVO.c: 85:     SPBRG=8;
   523  0751  3008               	movlw	8
   524  0752  1683               	bsf	3,5	;RP0=1, select bank1
   525  0753  1303               	bcf	3,6	;RP1=0, select bank1
   526  0754  0099               	movwf	25	;volatile
   527  0755                     l792:
   528                           
   529                           ;MICROVIDEFINITIVO.c: 89:     delay (1000);
   530  0755  30E8               	movlw	232
   531  0756  00F0               	movwf	delay@time
   532  0757  3003               	movlw	3
   533  0758  00F1               	movwf	delay@time+1
   534  0759  120A  118A  2703  120A  118A  	fcall	_delay
   535  075E                     l794:
   536                           
   537                           ;MICROVIDEFINITIVO.c: 94:     for(int i=0;i<50;i++){
   538  075E  1283               	bcf	3,5	;RP0=0, select bank0
   539  075F  1303               	bcf	3,6	;RP1=0, select bank0
   540  0760  01DE               	clrf	main@i
   541  0761  01DF               	clrf	main@i+1
   542  0762                     l800:
   543                           
   544                           ;MICROVIDEFINITIVO.c: 95:     ADCON0 = 0b01000011;
   545  0762  3043               	movlw	67
   546  0763  1283               	bcf	3,5	;RP0=0, select bank0
   547  0764  1303               	bcf	3,6	;RP1=0, select bank0
   548  0765  009F               	movwf	31	;volatile
   549                           
   550                           ;MICROVIDEFINITIVO.c: 96:     while(ADCON0bits.GO_nDONE){
   551  0766  2F82               	goto	l808
   552  0767                     l802:
   553                           
   554                           ;MICROVIDEFINITIVO.c: 97:      PORTB=ADRESH;
   555  0767  081E               	movf	30,w	;volatile
   556  0768  0086               	movwf	6	;volatile
   557                           
   558                           ;MICROVIDEFINITIVO.c: 98:      PORTD=ADRESL;
   559  0769  1683               	bsf	3,5	;RP0=1, select bank1
   560  076A  1303               	bcf	3,6	;RP1=0, select bank1
   561  076B  081E               	movf	30,w	;volatile
   562  076C  1283               	bcf	3,5	;RP0=0, select bank0
   563  076D  1303               	bcf	3,6	;RP1=0, select bank0
   564  076E  0088               	movwf	8	;volatile
   565  076F                     l804:
   566                           
   567                           ;MICROVIDEFINITIVO.c: 100:      char HI[50];;MICROVIDEFINITIVO.c: 101:      char LO[50];
      +                          ;MICROVIDEFINITIVO.c: 103:      HI[i]=ADRESH ;
   568  076F  081E               	movf	30,w	;volatile
   569  0770  00F4               	movwf	??_main
   570  0771  085E               	movf	main@i,w
   571  0772  3E20               	addlw	(low (main@HI| 0))& (0+255)
   572  0773  0084               	movwf	4
   573  0774  0874               	movf	??_main,w
   574  0775  1383               	bcf	3,7	;select IRP bank0
   575  0776  0080               	movwf	0
   576  0777                     l806:
   577                           
   578                           ;MICROVIDEFINITIVO.c: 104:      LO[i] =ADRESL ;
   579  0777  1683               	bsf	3,5	;RP0=1, select bank1
   580  0778  1303               	bcf	3,6	;RP1=0, select bank1
   581  0779  081E               	movf	30,w	;volatile
   582  077A  00F4               	movwf	??_main
   583  077B  1283               	bcf	3,5	;RP0=0, select bank0
   584  077C  1303               	bcf	3,6	;RP1=0, select bank0
   585  077D  085E               	movf	main@i,w
   586  077E  3EA0               	addlw	(low (main@LO| 0))& (0+255)
   587  077F  0084               	movwf	4
   588  0780  0874               	movf	??_main,w
   589  0781  0080               	movwf	0
   590  0782                     l808:
   591                           
   592                           ;MICROVIDEFINITIVO.c: 96:     while(ADCON0bits.GO_nDONE){
   593  0782  189F               	btfsc	31,1	;volatile
   594  0783  2F85               	goto	u91
   595  0784  2F86               	goto	u90
   596  0785                     u91:
   597  0785  2F67               	goto	l802
   598  0786                     u90:
   599  0786                     l810:
   600                           
   601                           ;MICROVIDEFINITIVO.c: 107:     char g[10]={54,65, 55,50,52,51,49,48,32};
   602  0786  3052               	movlw	main@g& (0+255)
   603  0787  0084               	movwf	4
   604  0788  3060               	movlw	low main@F1273
   605  0789  00F4               	movwf	??_main
   606  078A  0804               	movf	4,w
   607  078B  00F5               	movwf	??_main+1
   608  078C  300A               	movlw	10
   609  078D  00F6               	movwf	??_main+2
   610  078E                     u100:
   611  078E  0874               	movf	??_main,w
   612  078F  0084               	movwf	4
   613  0790  1383               	bcf	3,7	;select IRP bank0
   614  0791  0800               	movf	0,w
   615  0792  00F7               	movwf	??_main+3
   616  0793  0AF4               	incf	??_main,f
   617  0794  0875               	movf	??_main+1,w
   618  0795  0084               	movwf	4
   619  0796  0877               	movf	??_main+3,w
   620  0797  0080               	movwf	0
   621  0798  0AF5               	incf	??_main+1,f
   622  0799  0BF6               	decfsz	??_main+2,f
   623  079A  2F8E               	goto	u100
   624  079B                     l812:
   625                           
   626                           ;MICROVIDEFINITIVO.c: 109:      for(int o=0;o<10;o++){
   627  079B  01DC               	clrf	main@o
   628  079C  01DD               	clrf	main@o+1
   629  079D  2FA6               	goto	l820
   630  079E                     l818:
   631                           
   632                           ;MICROVIDEFINITIVO.c: 111:         TXREG=g[o];
   633  079E  1283               	bcf	3,5	;RP0=0, select bank0
   634  079F  1303               	bcf	3,6	;RP1=0, select bank0
   635  07A0  085C               	movf	main@o,w
   636  07A1  3E52               	addlw	(low (main@g| 0))& (0+255)
   637  07A2  0084               	movwf	4
   638  07A3  1383               	bcf	3,7	;select IRP bank0
   639  07A4  0800               	movf	0,w
   640  07A5  0099               	movwf	25	;volatile
   641  07A6                     l820:
   642                           
   643                           ;MICROVIDEFINITIVO.c: 110:     while(TXSTAbits.TRMT==1){
   644  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   645  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   646  07A8  1898               	btfsc	24,1	;volatile
   647  07A9  2FAB               	goto	u111
   648  07AA  2FAC               	goto	u110
   649  07AB                     u111:
   650  07AB  2F9E               	goto	l818
   651  07AC                     u110:
   652  07AC                     l81:	
   653                           ;MICROVIDEFINITIVO.c: 116:          }
   654                           
   655                           
   656                           ;MICROVIDEFINITIVO.c: 114:         while(TXSTAbits.TRMT ==0){
   657  07AC  1C98               	btfss	24,1	;volatile
   658  07AD  2FAF               	goto	u121
   659  07AE  2FB0               	goto	u120
   660  07AF                     u121:
   661  07AF  2FAC               	goto	l81
   662  07B0                     u120:
   663  07B0                     l822:
   664                           
   665                           ;MICROVIDEFINITIVO.c: 118:     }
   666  07B0  3001               	movlw	1
   667  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   668  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   669  07B3  07DC               	addwf	main@o,f
   670  07B4  1803               	skipnc
   671  07B5  0ADD               	incf	main@o+1,f
   672  07B6  3000               	movlw	0
   673  07B7  07DD               	addwf	main@o+1,f
   674  07B8                     l824:
   675  07B8  085D               	movf	main@o+1,w
   676  07B9  3A80               	xorlw	128
   677  07BA  00FF               	movwf	btemp+1
   678  07BB  3080               	movlw	128
   679  07BC  027F               	subwf	btemp+1,w
   680  07BD  1D03               	skipz
   681  07BE  2FC1               	goto	u135
   682  07BF  300A               	movlw	10
   683  07C0  025C               	subwf	main@o,w
   684  07C1                     u135:
   685  07C1  1C03               	skipc
   686  07C2  2FC4               	goto	u131
   687  07C3  2FC5               	goto	u130
   688  07C4                     u131:
   689  07C4  2FA6               	goto	l820
   690  07C5                     u130:
   691  07C5                     l826:
   692                           
   693                           ;MICROVIDEFINITIVO.c: 119:     _delay((unsigned long)((10000)*(8000000/4000.0)));
   694  07C5  3066               	movlw	102
   695  07C6  00F6               	movwf	??_main+2
   696  07C7  3076               	movlw	118
   697  07C8  00F5               	movwf	??_main+1
   698  07C9  30C1               	movlw	193
   699  07CA  00F4               	movwf	??_main
   700  07CB                     u157:
   701  07CB  0BF4               	decfsz	??_main,f
   702  07CC  2FCB               	goto	u157
   703  07CD  0BF5               	decfsz	??_main+1,f
   704  07CE  2FCB               	goto	u157
   705  07CF  0BF6               	decfsz	??_main+2,f
   706  07D0  2FCB               	goto	u157
   707                           
   708                           ;MICROVIDEFINITIVO.c: 120:      }
   709  07D1  3001               	movlw	1
   710  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   711  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   712  07D4  07DE               	addwf	main@i,f
   713  07D5  1803               	skipnc
   714  07D6  0ADF               	incf	main@i+1,f
   715  07D7  3000               	movlw	0
   716  07D8  07DF               	addwf	main@i+1,f
   717  07D9                     l828:
   718  07D9  085F               	movf	main@i+1,w
   719  07DA  3A80               	xorlw	128
   720  07DB  00FF               	movwf	btemp+1
   721  07DC  3080               	movlw	128
   722  07DD  027F               	subwf	btemp+1,w
   723  07DE  1D03               	skipz
   724  07DF  2FE2               	goto	u145
   725  07E0  3032               	movlw	50
   726  07E1  025E               	subwf	main@i,w
   727  07E2                     u145:
   728  07E2  1C03               	skipc
   729  07E3  2FE5               	goto	u141
   730  07E4  2FE6               	goto	u140
   731  07E5                     u141:
   732  07E5  2F62               	goto	l800
   733  07E6                     u140:
   734  07E6  2F5E               	goto	l794
   735  07E7  120A  118A  2800   	ljmp	start
   736  07EA                     __end_of_main:
   737                           
   738                           	psect	text1
   739  0703                     __ptext1:	
   740 ;; *************** function _delay *****************
   741 ;; Defined at:
   742 ;;		line 30 in file "MICROVIDEFINITIVO.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  time            2    0[COMMON] unsigned int 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  i               2    2[COMMON] int 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, btemp+1
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         2       0       0       0       0
   757 ;;      Locals:         2       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         4       0       0       0       0
   760 ;;Total ram usage:        4 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _delay
   771  0703                     _delay:
   772  0703                     l754:	
   773                           ;incstack = 0
   774                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   775                           
   776                           
   777                           ;MICROVIDEFINITIVO.c: 30: void delay(unsigned int time);MICROVIDEFINITIVO.c: 31: {;MICRO
      +                          VIDEFINITIVO.c: 32:     for(int i=0;i<1000;i++){
   778  0703  01F2               	clrf	delay@i
   779  0704  01F3               	clrf	delay@i+1
   780  0705                     l61:
   781  0705  0000               	nop	;# 
   782  0706                     l760:
   783                           
   784                           ;MICROVIDEFINITIVO.c: 34:     }
   785  0706  3001               	movlw	1
   786  0707  07F2               	addwf	delay@i,f
   787  0708  1803               	skipnc
   788  0709  0AF3               	incf	delay@i+1,f
   789  070A  3000               	movlw	0
   790  070B  07F3               	addwf	delay@i+1,f
   791  070C                     l762:
   792  070C  0873               	movf	delay@i+1,w
   793  070D  3A80               	xorlw	128
   794  070E  00FF               	movwf	btemp+1
   795  070F  3083               	movlw	131
   796  0710  027F               	subwf	btemp+1,w
   797  0711  1D03               	skipz
   798  0712  2F15               	goto	u85
   799  0713  30E8               	movlw	232
   800  0714  0272               	subwf	delay@i,w
   801  0715                     u85:
   802  0715  1C03               	skipc
   803  0716  2F18               	goto	u81
   804  0717  2F19               	goto	u80
   805  0718                     u81:
   806  0718  2F05               	goto	l61
   807  0719                     u80:
   808  0719                     l63:
   809  0719  0008               	return
   810  071A                     __end_of_delay:
   811  007E                     btemp	set	126	;btemp
   812  007E                     wtemp0	set	126
   813                           
   814                           	psect	config
   815                           
   816                           ;Config register CONFIG1 @ 0x2007
   817                           ;	Oscillator Selection bits
   818                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   819                           ;	Watchdog Timer Enable bit
   820                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   821                           ;	Power-up Timer Enable bit
   822                           ;	PWRTE = OFF, PWRT disabled
   823                           ;	RE3/MCLR pin function select bit
   824                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   825                           ;	Code Protection bit
   826                           ;	CP = OFF, Program memory code protection is disabled
   827                           ;	Data Code Protection bit
   828                           ;	CPD = OFF, Data memory code protection is disabled
   829                           ;	Brown Out Reset Selection bits
   830                           ;	BOREN = OFF, BOR disabled
   831                           ;	Internal External Switchover bit
   832                           ;	IESO = ON, Internal/External Switchover mode is enabled
   833                           ;	Fail-Safe Clock Monitor Enabled bit
   834                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   835                           ;	Low Voltage Programming Enable bit
   836                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   837                           ;	In-Circuit Debugger Mode bit
   838                           ;	DEBUG = 0x1, unprogrammed default
   839  2007                     	org	8199
   840  2007  2CD4               	dw	11476
   841                           
   842                           ;Config register CONFIG2 @ 0x2008
   843                           ;	Brown-out Reset Selection bit
   844                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   845                           ;	Flash Program Memory Self Write Enable bits
   846                           ;	WRT = OFF, Write protection off
   847  2008                     	org	8200
   848  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     64      74
    BANK1            80     50      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               118   118      0     352
                                              4 COMMON     4     4      0
                                              0 BANK0     64    64      0
                                              0 BANK1     50    50      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     32      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      88      12        0.0%
ABS                  0      0      88       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 24 21:18:28 2020

                      pc 0002                       l61 0705                       l63 0719  
                     l81 07AC                       u80 0719                       u81 0718  
                     u90 0786                       u91 0785                       u85 0715  
                     fsr 0004                      l800 0762                      l810 0786  
                    l802 0767                      l820 07A6                      l812 079B  
                    l804 076F                      l822 07B0                      l806 0777  
                    l760 0706                      l824 07B8                      l808 0782  
                    l762 070C                      l754 0703                      l826 07C5  
                    l818 079E                      l770 072A                      l828 07D9  
                    l780 073F                      l772 072B                      l764 071A  
                    l790 074E                      l782 0746                      l774 0735  
                    l766 0722                      l792 0755                      l784 0747  
                    l776 0737                      l768 0723                      l794 075E  
                    l786 0748                      l778 073C                      l788 074B  
                    u100 078E                      u110 07AC                      u111 07AB  
                    u120 07B0                      u121 07AF                      u130 07C5  
                    u131 07C4                      u140 07E6                      u141 07E5  
                    u135 07C1                      u145 07E2                      u157 07CB  
                    fsr0 0004                      indf 0000                     _BRGH 04C2  
                   _CREN 00C4                     _PIE1 008C                     _SPEN 00C7  
                   _TXEN 04C5                     _SYNC 04C4                     _main 071A  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019                    _delay 0703  
                  main@g 0052                    main@i 005E                    main@o 005C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EA             __end_of_main 07EA                   ??_main 0074  
                 ?_delay 0070                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
                 _INTCON 000B                   _OSCCON 008F                   delay@i 0072  
                 main@HI 0020                   main@LO 00A0  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 06E6            __end_of_delay 071A  
                ??_delay 0072               __pmaintext 071A                  __ptext1 0703  
   end_of_initialization 07FC                _TXSTAbits 0098      start_initialization 07EA  
             init_fetch0 06F0              __pdataBANK0 0060              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
         __size_of_delay 0017                delay@time 0070                 _RESULTHI 007A  
               _RESULTLO 0078                main@F1273 0060               _ADCON0bits 001F  
          __size_of_main 00D0                 init_ram0 06F4  
